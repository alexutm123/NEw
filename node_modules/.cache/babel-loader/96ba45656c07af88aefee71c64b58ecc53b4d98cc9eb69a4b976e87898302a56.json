{"ast":null,"code":"import _objectSpread from\"C:/Users/user/Documents/GitHub/NEw/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _defineProperty from\"C:/Users/user/Documents/GitHub/NEw/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _classCallCheck from\"C:/Users/user/Documents/GitHub/NEw/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"C:/Users/user/Documents/GitHub/NEw/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"C:/Users/user/Documents/GitHub/NEw/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"C:/Users/user/Documents/GitHub/NEw/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import React,{Component,useContext}from\"react\";import{getSquarestoGo,getAllPiecesExceptKnight,moveLikesKnight,updateKnightInPosition,getSquareOfKnight,getInvalidSquaresByPosition}from\"./functions\";// import { Chess } from \"chess.js\";\nimport Chessboard from\"chessboardjsx\";// code extracted and adapted from https://chessboardjsx.com/integrations/move-validation\nimport{jsx as _jsx}from\"react/jsx-runtime\";var ChessPuzzle=/*#__PURE__*/function(_Component){_inherits(ChessPuzzle,_Component);var _super=_createSuper(ChessPuzzle);function ChessPuzzle(){var _this;_classCallCheck(this,ChessPuzzle);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={position:_this.props.exercise.position,squareOfKnight:getSquareOfKnight(_this.props.exercise.position),OtherPieces:getAllPiecesExceptKnight(_this.props.exercise.position),invalidSquares:getInvalidSquaresByPosition(_this.props.exercise.position),squaresToGo:getSquarestoGo(_this.props.exercise),actualSquareToGoIndex:1,squareStyles:{}};_this.hasEnded=function(){return _this.state.actualSquareToGoIndex===_this.state.squaresToGo.length;};_this.reset=function(){var position=_this.props.exercise.position;var squaresToGo=getSquarestoGo(_this.props.exercise);_this.setState({position:position,squareOfKnight:getSquareOfKnight(position),OtherPieces:getAllPiecesExceptKnight(position),invalidSquares:getInvalidSquaresByPosition(position),squaresToGo:squaresToGo,actualSquareToGoIndex:1,squareStyles:_defineProperty({},squaresToGo[1],{backgroundColor:\"rgba(255, 255, 0, 0.4)\"})});_this.props.contextExercise.setSquares(\"totalToGo\",squaresToGo.length-1);};_this.allowDrag=function(_ref){var piece=_ref.piece;// we can only pick up the white knight\nreturn piece===\"wN\";};_this.moveTheKnight=function(sourceSquare,targetSquare){if(moveLikesKnight(sourceSquare,targetSquare)&&!_this.state.invalidSquares.includes(targetSquare)){_this.setState({position:updateKnightInPosition(_this.props.exercise.position,targetSquare),squareOfKnight:targetSquare});if(targetSquare===_this.state.squaresToGo[_this.state.actualSquareToGoIndex]){_this.props.contextExercise.setSquares(\"squaresDone\",_this.state.actualSquareToGoIndex);_this.setState({actualSquareToGoIndex:_this.state.actualSquareToGoIndex+1,actualSquareToGo:_this.state.squaresToGo[_this.state.actualSquareToGoIndex+1],squareStyles:_defineProperty({},_this.state.squaresToGo[_this.state.actualSquareToGoIndex+1],{backgroundColor:\"rgba(255, 255, 0, 0.4)\"})});};if(!_this.props.timeIsActive){_this.props.context.setTimer(\"playPauseTime\");}}else if(moveLikesKnight(sourceSquare,targetSquare)){_this.props.context.setTimer(\"addPenalization\");}else{return;}};_this.onDrop=function(_ref2){var sourceSquare=_ref2.sourceSquare,targetSquare=_ref2.targetSquare;_this.moveTheKnight(sourceSquare,targetSquare);};_this.onSquareClick=function(square){_this.moveTheKnight(_this.state.squareOfKnight,square);};return _this;}_createClass(ChessPuzzle,[{key:\"componentDidMount\",value:function componentDidMount(){// this.game = new Chess(this.state.fen);\nthis.setState({squareStyles:_defineProperty({},this.state.squaresToGo[this.state.actualSquareToGoIndex],{backgroundColor:\"rgba(255, 255, 0, 0.4)\"})});}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){if(!this.props.timeIsActive&&this.props.hasReseted){this.reset();this.props.context.setTimerState(_objectSpread(_objectSpread({},this.props.context.timer),{},{hasReseted:false}));}if(this.hasEnded()&&!this.props.hasEnded){this.props.context.setTimer(\"playPauseTime\");this.props.context.setTimer(\"endGame\");}}},{key:\"render\",value:function render(){var _this$state=this.state,position=_this$state.position,squareStyles=_this$state.squareStyles;return this.props.children({squareStyles:squareStyles,position:position,onDrop:this.onDrop,allowDrag:this.allowDrag,onSquareClick:this.onSquareClick});}}]);return ChessPuzzle;}(Component);export default function ChessPuzzleBoard(props){var context=useContext(props.context);var contextExercise=useContext(props.contextExercise);return/*#__PURE__*/_jsx(ChessPuzzle,{context:context,exercise:props.exercise,contextExercise:contextExercise,timeIsActive:context.timer.timeIsActive,hasReseted:context.timer.hasReseted,hasEnded:context.timer.hasEnded,penalizedMode:context.timer.penalizedMode,children:function children(_ref3){var position=_ref3.position,onDrop=_ref3.onDrop,allowDrag=_ref3.allowDrag,onSquareClick=_ref3.onSquareClick;return/*#__PURE__*/_jsx(Chessboard,{position:position,onDrop:onDrop,allowDrag:allowDrag,orientation:props.orientation,darkSquareStyle:{backgroundColor:\"#769656\"}// Салатовый темный цвет для темных клеток\n,onSquareClick:onSquareClick,calcWidth:function calcWidth(_ref4){var screenWidth=_ref4.screenWidth;return Math.min(screenWidth-32-8,560);}});}});}","map":{"version":3,"names":["React","Component","useContext","getSquarestoGo","getAllPiecesExceptKnight","moveLikesKnight","updateKnightInPosition","getSquareOfKnight","getInvalidSquaresByPosition","Chessboard","ChessPuzzle","state","position","props","exercise","squareOfKnight","OtherPieces","invalidSquares","squaresToGo","actualSquareToGoIndex","squareStyles","hasEnded","length","reset","setState","backgroundColor","contextExercise","setSquares","allowDrag","piece","moveTheKnight","sourceSquare","targetSquare","includes","actualSquareToGo","timeIsActive","context","setTimer","onDrop","onSquareClick","square","hasReseted","setTimerState","timer","children","ChessPuzzleBoard","penalizedMode","orientation","screenWidth","Math","min"],"sources":["C:/Users/user/Documents/GitHub/NEw/src/integrations/ChessPuzzle.js"],"sourcesContent":["import React, { Component, useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n\tgetSquarestoGo,\n\tgetAllPiecesExceptKnight,\n\tmoveLikesKnight,\n\tupdateKnightInPosition,\n\tgetSquareOfKnight,\n  getInvalidSquaresByPosition,\n} from \"./functions\";\n// import { Chess } from \"chess.js\";\nimport Chessboard from \"chessboardjsx\";\n\n\n\n\n// code extracted and adapted from https://chessboardjsx.com/integrations/move-validation\nclass ChessPuzzle extends Component {\n  static propTypes = { children: PropTypes.func };\n  state = {\n    position: this.props.exercise.position,\n    squareOfKnight: getSquareOfKnight(this.props.exercise.position),\n    OtherPieces: getAllPiecesExceptKnight(this.props.exercise.position),\n    invalidSquares: getInvalidSquaresByPosition(this.props.exercise.position),\n    squaresToGo: getSquarestoGo(this.props.exercise),\n    actualSquareToGoIndex: 1,\n    squareStyles: {},\n  };\n\n\n  componentDidMount() {\n    // this.game = new Chess(this.state.fen);\n\n    this.setState({\n        squareStyles: { [this.state.squaresToGo[this.state.actualSquareToGoIndex]]: { backgroundColor: \"rgba(255, 255, 0, 0.4)\" } }\n      });\n\t\n  }\n\n  componentDidUpdate(){\n    if (!this.props.timeIsActive && this.props.hasReseted){\n        this.reset();\n        this.props.context.setTimerState({...this.props.context.timer, hasReseted: false});\n        \n    }\n    if (this.hasEnded() && !this.props.hasEnded){\n        this.props.context.setTimer(\"playPauseTime\");\n        this.props.context.setTimer(\"endGame\");\n    }\n    \n  }\n\n  hasEnded = () => {\n    return this.state.actualSquareToGoIndex === this.state.squaresToGo.length;\n  }\n\n  reset = () => {\n    const position = this.props.exercise.position;\n    const squaresToGo = getSquarestoGo(this.props.exercise);\n    this.setState({\n      position: position,\n      squareOfKnight: getSquareOfKnight(position),\n      OtherPieces: getAllPiecesExceptKnight(position),\n      invalidSquares: getInvalidSquaresByPosition(position),\n      squaresToGo: squaresToGo,\n      actualSquareToGoIndex: 1,\n      squareStyles: { [squaresToGo[1]]: { backgroundColor: \"rgba(255, 255, 0, 0.4)\" } }\n    });\n    this.props.contextExercise.setSquares(\"totalToGo\", squaresToGo.length - 1);\n  }\n\n  allowDrag = ({ piece }) => {\n    // we can only pick up the white knight\n    return piece === \"wN\";\n    };\n\n\n  moveTheKnight = (sourceSquare, targetSquare) => {\n    if (moveLikesKnight(sourceSquare, targetSquare) && !this.state.invalidSquares.includes(targetSquare)) {\n      this.setState({\n          position: updateKnightInPosition(this.props.exercise.position, targetSquare),\n          squareOfKnight: targetSquare,\n      });\n      if (targetSquare === this.state.squaresToGo[this.state.actualSquareToGoIndex]){\n        this.props.contextExercise.setSquares(\"squaresDone\", this.state.actualSquareToGoIndex);\n          this.setState({\n            actualSquareToGoIndex: this.state.actualSquareToGoIndex + 1,\n            actualSquareToGo: this.state.squaresToGo[this.state.actualSquareToGoIndex + 1],\n            squareStyles: { [this.state.squaresToGo[this.state.actualSquareToGoIndex + 1]]: { backgroundColor: \"rgba(255, 255, 0, 0.4)\" } }\n        });\n      };\n      if (!this.props.timeIsActive){\n        this.props.context.setTimer(\"playPauseTime\");\n      }\n      }\n    else if (moveLikesKnight(sourceSquare, targetSquare)){\n        this.props.context.setTimer(\"addPenalization\")\n    }\n      else {\n          return;\n      }\n    };\n\n  onDrop = ({ sourceSquare, targetSquare }) => {\n    this.moveTheKnight(sourceSquare, targetSquare);\n    \n  };\n\n  onSquareClick = square => {\n    this.moveTheKnight(this.state.squareOfKnight, square);\n  };\n\n\n\n\n  render() {\n    const { position, squareStyles } = this.state;\n\n    return this.props.children({\n      squareStyles,\n      position: position,\n      onDrop: this.onDrop,\n      allowDrag: this.allowDrag,\n      onSquareClick: this.onSquareClick,\n    });\n  }\n}\n\n\n\nexport default function ChessPuzzleBoard(props) {\n  const context = useContext(props.context);\n  const contextExercise = useContext(props.contextExercise);\n  return (\n    <ChessPuzzle\n  context={context}\n  exercise={props.exercise}\n  contextExercise={contextExercise}\n  timeIsActive={context.timer.timeIsActive}\n  hasReseted={context.timer.hasReseted}\n  hasEnded={context.timer.hasEnded}\n  penalizedMode={context.timer.penalizedMode}\n>\n  {({ position, onDrop, allowDrag, onSquareClick }) => (\n    <Chessboard\n      position={position}\n      onDrop={onDrop}\n      allowDrag={allowDrag}\n      orientation={props.orientation}\n      darkSquareStyle={{ backgroundColor: \"#769656\" }} // Салатовый темный цвет для темных клеток\n      onSquareClick={onSquareClick}\n      calcWidth={({ screenWidth }) => {\n        return Math.min(screenWidth - 32 - 8, 560);\n      }}\n    />\n  )}\n</ChessPuzzle>\n\n\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}